[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[project]
name = "tracksdata"
dynamic = ["version"]
description = ''
readme = "README.md"
requires-python = ">=3.10"
license = "MIT"
keywords = []
authors = [
  { name = "Jordao Bragantini", email = "jordao.bragantini@czbiohub.org" },
  { name = "Teun Huijben", email = "teun.huijben@czbiohub.org" },
  { name = "Caroline Malin-Mayor", email = "malinmayorc@janelia.hhmi.org" },
  { name = "Anniek Stokkermans", email = "a.stokkermans@hubrecht.eu" },
]
classifiers = [
  "Development Status :: 4 - Beta",
  "Programming Language :: Python",
  "Programming Language :: Python :: 3.10",
  "Programming Language :: Python :: 3.11",
  "Programming Language :: Python :: 3.12",
  "Programming Language :: Python :: Implementation :: CPython",
  "Programming Language :: Python :: Implementation :: PyPy",
]
dependencies = [
  "dask",
  "blosc2",
  "numpy > 2",
  "scikit-image >= 0.24.0",
  # remove this once rustworkx 0.17.0 is released
  "rustworkx @ git+https://github.com/qiskit/rustworkx.git@ac1082ca9d1774e6e9a91436a15a201b0c7baffd",
  "tqdm",
  "polars",
  "sqlalchemy>=2",
  "rich",
  "numba",
  "imagecodecs",
  "typing-extensions",
  "ilpy >= 0.5.1",
  "pyarrow",
]

[project.optional-dependencies]
test = [
  "pytest>=7.0",
  "pytest-cov",
  "pytest-html",
  "py-ctcmetrics",
]

[project.urls]
Documentation = "https://github.com/jookuma/tracksdata#readme"
Issues = "https://github.com/jookuma/tracksdata/issues"
Source = "https://github.com/jookuma/tracksdata"

[tool.hatch.metadata]
allow-direct-references = true

[tool.hatch.version]
path = "src/tracksdata/__about__.py"

# https://docs.astral.sh/ruff
[tool.ruff]
target-version = "py310"
src = ["src"]
line-length = 120

# https://docs.astral.sh/ruff/rules
[tool.ruff.lint]
pydocstyle = { convention = "numpy" }
select = [
    "E",    # style errors
    "W",    # style warnings
    "F",    # flakes
    "D417", # Missing argument descriptions in Docstrings
    "I",    # isort
    "UP",   # pyupgrade
    "C4",   # flake8-comprehensions
    "B",    # flake8-bugbear
    "A001", # flake8-builtins
    "RUF",  # ruff-specific rules
    "TID",  # flake8-tidy-imports
]

[tool.ruff.lint.per-file-ignores]
"tests/*.py" = ["D", "S"]

# https://docs.astral.sh/ruff/formatter/
[tool.ruff.format]
docstring-code-format = true
skip-magic-trailing-comma = false # default is false

# https://coverage.readthedocs.io/en/6.4/config.html
[tool.coverage.report]
show_missing = true
skip_covered = true
exclude_lines = [
    "@njit",  # numba is not supported by coverage
    "@jitclass",
    "@overload",
    "pragma: no cover", # Have to re-enable the standard pragma
    "def __repr__", # Don't complain about missing debug-only code:
    "raise AssertionError",
    "raise NotImplementedError",
    "if TYPE_CHECKING:",  # Ignore type checking
    "if __name__ == .__main__.:", # Don't complain if non-runnable code isn't run:
    "@(abc.)?abstractmethod", # Don't complain about abstract methods, they aren't run:
]

[tool.coverage.run]
source = ["src"]
branch = true
parallel = true
omit = [
  "src/tracksdata/__about__.py",
  "src/tracksdata/conftest.py",
  "**/_test/*.py",
]
